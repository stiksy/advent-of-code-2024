package com.stiksy.advent.days;

import com.stiksy.advent.days.Day14.Robot;
import org.junit.jupiter.api.Test;

import java.awt.Point;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class Day14Tests {
    String input =
            "p=0,4 v=3,-3\n" +
            "p=6,3 v=-1,-3\n" +
            "p=10,3 v=-1,2\n" +
            "p=2,0 v=2,-1\n" +
            "p=0,0 v=1,3\n" +
            "p=3,0 v=-2,-2\n" +
            "p=7,6 v=-1,-3\n" +
            "p=3,0 v=-1,-2\n" +
            "p=9,3 v=2,3\n" +
            "p=7,3 v=-1,2\n" +
            "p=2,4 v=2,-3\n" +
            "p=9,5 v=-3,-3";

    String finalInput =
            "p=80,58 v=-80,-45\n" +
            "p=80,4 v=-4,-91\n" +
            "p=40,2 v=29,39\n" +
            "p=38,45 v=3,-25\n" +
            "p=95,68 v=82,33\n" +
            "p=75,37 v=44,-31\n" +
            "p=53,27 v=-20,-99\n" +
            "p=47,11 v=-75,93\n" +
            "p=11,14 v=-37,-22\n" +
            "p=3,43 v=76,60\n" +
            "p=21,50 v=-3,-23\n" +
            "p=41,6 v=23,81\n" +
            "p=83,62 v=34,54\n" +
            "p=78,63 v=74,45\n" +
            "p=71,63 v=-58,-56\n" +
            "p=86,19 v=16,20\n" +
            "p=40,46 v=72,79\n" +
            "p=96,15 v=59,11\n" +
            "p=63,69 v=57,25\n" +
            "p=96,28 v=-7,29\n" +
            "p=36,63 v=17,32\n" +
            "p=1,40 v=-50,68\n" +
            "p=50,5 v=31,-74\n" +
            "p=70,61 v=87,31\n" +
            "p=43,71 v=75,-69\n" +
            "p=20,73 v=-93,-42\n" +
            "p=69,13 v=-79,81\n" +
            "p=68,90 v=19,-32\n" +
            "p=39,32 v=-52,-7\n" +
            "p=74,82 v=-27,24\n" +
            "p=36,1 v=8,61\n" +
            "p=12,6 v=-25,-77\n" +
            "p=92,96 v=-16,-12\n" +
            "p=49,59 v=50,-47\n" +
            "p=14,80 v=-25,-19\n" +
            "p=79,25 v=-79,88\n" +
            "p=67,61 v=13,-96\n" +
            "p=37,55 v=-47,-21\n" +
            "p=40,95 v=-6,32\n" +
            "p=92,88 v=-90,-22\n" +
            "p=35,79 v=52,-62\n" +
            "p=27,40 v=-22,-8\n" +
            "p=22,73 v=61,-27\n" +
            "p=44,84 v=-26,31\n" +
            "p=64,9 v=-47,38\n" +
            "p=82,87 v=-7,-45\n" +
            "p=36,40 v=-43,87\n" +
            "p=100,17 v=-68,-48\n" +
            "p=91,93 v=-53,-82\n" +
            "p=27,66 v=-66,67\n" +
            "p=65,66 v=-78,-18\n" +
            "p=65,75 v=34,67\n" +
            "p=96,71 v=88,84\n" +
            "p=73,75 v=-50,24\n" +
            "p=90,100 v=68,39\n" +
            "p=48,22 v=83,-33\n" +
            "p=79,80 v=-49,45\n" +
            "p=5,53 v=-9,-94\n" +
            "p=53,101 v=11,22\n" +
            "p=63,18 v=-18,2\n" +
            "p=31,98 v=-98,56\n" +
            "p=16,42 v=-83,-68\n" +
            "p=23,101 v=-69,99\n" +
            "p=72,102 v=-4,-21\n" +
            "p=27,87 v=-45,-10\n" +
            "p=22,49 v=21,-87\n" +
            "p=3,2 v=-11,-98\n" +
            "p=84,76 v=22,50\n" +
            "p=48,43 v=83,10\n" +
            "p=59,37 v=-18,40\n" +
            "p=23,24 v=-66,-49\n" +
            "p=4,88 v=-86,99\n" +
            "p=77,57 v=90,10\n" +
            "p=37,20 v=-49,-23\n" +
            "p=11,56 v=6,16\n" +
            "p=49,14 v=-32,12\n" +
            "p=55,86 v=2,58\n" +
            "p=37,79 v=-20,75\n" +
            "p=63,25 v=65,-79\n" +
            "p=81,92 v=96,-7\n" +
            "p=66,58 v=-66,37\n" +
            "p=11,17 v=-22,-47\n" +
            "p=63,7 v=37,21\n" +
            "p=57,17 v=-78,-5\n" +
            "p=84,7 v=74,-98\n" +
            "p=77,51 v=-12,15\n" +
            "p=90,95 v=22,-5\n" +
            "p=8,72 v=12,-70\n" +
            "p=35,81 v=3,23\n" +
            "p=66,96 v=80,56\n" +
            "p=29,87 v=-52,67\n" +
            "p=18,6 v=41,-55\n" +
            "p=25,0 v=10,84\n" +
            "p=93,49 v=-91,-69\n" +
            "p=12,19 v=9,-82\n" +
            "p=100,21 v=4,79\n" +
            "p=47,24 v=-93,98\n" +
            "p=89,52 v=-50,-56\n" +
            "p=20,54 v=18,-59\n" +
            "p=78,86 v=74,-30\n" +
            "p=61,80 v=40,15\n" +
            "p=79,35 v=-36,2\n" +
            "p=95,13 v=-56,2\n" +
            "p=57,11 v=-78,90\n" +
            "p=55,47 v=14,93\n" +
            "p=79,16 v=-53,-83\n" +
            "p=4,46 v=27,60\n" +
            "p=49,50 v=-6,-95\n" +
            "p=26,84 v=-41,-36\n" +
            "p=55,98 v=34,91\n" +
            "p=51,72 v=-23,94\n" +
            "p=19,53 v=-40,-99\n" +
            "p=69,102 v=83,3\n" +
            "p=68,27 v=-35,-64\n" +
            "p=30,64 v=53,-60\n" +
            "p=95,47 v=-16,-1\n" +
            "p=22,7 v=-92,21\n" +
            "p=3,78 v=1,41\n" +
            "p=34,97 v=-49,13\n" +
            "p=100,27 v=44,-16\n" +
            "p=76,53 v=37,-33\n" +
            "p=81,17 v=-10,37\n" +
            "p=21,36 v=9,19\n" +
            "p=3,57 v=79,-44\n" +
            "p=78,11 v=19,21\n" +
            "p=29,42 v=-23,70\n" +
            "p=85,61 v=-33,34\n" +
            "p=80,45 v=48,1\n" +
            "p=28,55 v=9,86\n" +
            "p=30,62 v=13,-30\n" +
            "p=83,71 v=74,48\n" +
            "p=78,17 v=-79,97\n" +
            "p=41,91 v=28,11\n" +
            "p=66,73 v=-67,-27\n" +
            "p=89,24 v=58,-34\n" +
            "p=84,102 v=76,70\n" +
            "p=43,98 v=-61,72\n" +
            "p=26,57 v=57,96\n" +
            "p=34,85 v=35,15\n" +
            "p=52,41 v=9,-76\n" +
            "p=4,15 v=59,36\n" +
            "p=82,21 v=42,-41\n" +
            "p=33,42 v=-66,-16\n" +
            "p=55,11 v=-90,4\n" +
            "p=5,87 v=76,31\n" +
            "p=43,0 v=6,-40\n" +
            "p=30,18 v=-95,3\n" +
            "p=47,75 v=-20,-20\n" +
            "p=19,85 v=12,40\n" +
            "p=94,60 v=-91,42\n" +
            "p=68,6 v=-30,-92\n" +
            "p=26,77 v=58,83\n" +
            "p=75,85 v=10,-83\n" +
            "p=65,48 v=-67,-60\n" +
            "p=39,94 v=-88,72\n" +
            "p=36,79 v=-98,75\n" +
            "p=36,96 v=-3,-72\n" +
            "p=23,86 v=99,99\n" +
            "p=93,22 v=-91,-23\n" +
            "p=12,17 v=-28,20\n" +
            "p=0,80 v=1,92\n" +
            "p=84,39 v=94,71\n" +
            "p=41,55 v=35,-8\n" +
            "p=83,46 v=-79,37\n" +
            "p=6,1 v=18,-81\n" +
            "p=34,22 v=87,-57\n" +
            "p=95,3 v=-16,24\n" +
            "p=36,66 v=-17,-60\n" +
            "p=68,22 v=-70,86\n" +
            "p=26,55 v=21,35\n" +
            "p=70,59 v=-70,68\n" +
            "p=95,66 v=6,-43\n" +
            "p=38,64 v=-26,24\n" +
            "p=92,12 v=-21,40\n" +
            "p=26,23 v=35,62\n" +
            "p=12,87 v=40,48\n" +
            "p=76,98 v=-15,2\n" +
            "p=37,14 v=-78,-65\n" +
            "p=20,67 v=-21,35\n" +
            "p=76,81 v=-53,6\n" +
            "p=40,79 v=-12,83\n" +
            "p=90,2 v=65,39\n" +
            "p=99,93 v=-59,81\n" +
            "p=7,92 v=-5,14\n" +
            "p=97,56 v=-80,34\n" +
            "p=68,69 v=-47,-10\n" +
            "p=48,8 v=-9,72\n" +
            "p=65,71 v=-33,89\n" +
            "p=85,32 v=2,45\n" +
            "p=32,101 v=-19,-26\n" +
            "p=46,26 v=-50,-54\n" +
            "p=10,46 v=-87,-86\n" +
            "p=15,54 v=49,57\n" +
            "p=20,15 v=41,-31\n" +
            "p=78,65 v=-56,59\n" +
            "p=32,38 v=-39,95\n" +
            "p=41,55 v=29,86\n" +
            "p=100,98 v=82,72\n" +
            "p=15,16 v=-34,30\n" +
            "p=17,1 v=38,64\n" +
            "p=45,29 v=20,-72\n" +
            "p=42,65 v=-90,82\n" +
            "p=23,30 v=-14,36\n" +
            "p=14,64 v=-31,-26\n" +
            "p=53,7 v=-26,-98\n" +
            "p=94,62 v=55,53\n" +
            "p=26,66 v=9,24\n" +
            "p=80,11 v=-75,48\n" +
            "p=32,56 v=9,43\n" +
            "p=26,69 v=-80,77\n" +
            "p=68,39 v=25,-50\n" +
            "p=24,85 v=13,-92\n" +
            "p=75,26 v=48,-93\n" +
            "p=42,26 v=69,28\n" +
            "p=62,98 v=11,-64\n" +
            "p=76,62 v=-39,94\n" +
            "p=56,30 v=-58,-92\n" +
            "p=91,58 v=33,51\n" +
            "p=38,2 v=-49,39\n" +
            "p=92,91 v=-39,-47\n" +
            "p=97,46 v=33,-16\n" +
            "p=39,37 v=-87,-86\n" +
            "p=71,86 v=-47,-55\n" +
            "p=4,17 v=53,97\n" +
            "p=39,73 v=17,-52\n" +
            "p=41,72 v=49,33\n" +
            "p=75,44 v=71,61\n" +
            "p=54,43 v=-58,-33\n" +
            "p=75,18 v=-53,-14\n" +
            "p=32,76 v=-2,76\n" +
            "p=18,30 v=-86,96\n" +
            "p=41,62 v=-72,9\n" +
            "p=73,74 v=-90,-19\n" +
            "p=1,35 v=56,-59\n" +
            "p=51,62 v=-96,-35\n" +
            "p=42,30 v=-26,19\n" +
            "p=89,9 v=22,-81\n" +
            "p=99,25 v=56,2\n" +
            "p=95,79 v=10,-54\n" +
            "p=17,100 v=90,64\n" +
            "p=97,18 v=81,29\n" +
            "p=31,78 v=-8,-45\n" +
            "p=27,31 v=73,4\n" +
            "p=1,31 v=93,52\n" +
            "p=89,2 v=-83,23\n" +
            "p=91,27 v=34,94\n" +
            "p=49,86 v=49,92\n" +
            "p=13,1 v=-5,-27\n" +
            "p=96,38 v=27,77\n" +
            "p=34,72 v=-58,-2\n" +
            "p=31,83 v=-69,-2\n" +
            "p=85,49 v=-44,59\n" +
            "p=32,24 v=52,-40\n" +
            "p=8,86 v=-88,-15\n" +
            "p=58,43 v=-60,-98\n" +
            "p=24,26 v=-63,-49\n" +
            "p=64,78 v=43,6\n" +
            "p=87,40 v=-30,-9\n" +
            "p=39,57 v=14,-27\n" +
            "p=61,66 v=-24,5\n" +
            "p=92,71 v=-88,-71\n" +
            "p=100,74 v=-97,-1\n" +
            "p=79,88 v=-58,6\n" +
            "p=41,22 v=-26,-58\n" +
            "p=35,88 v=72,24\n" +
            "p=48,90 v=-84,-12\n" +
            "p=0,62 v=1,50\n" +
            "p=76,50 v=-24,69\n" +
            "p=93,60 v=-13,-9\n" +
            "p=85,2 v=-13,13\n" +
            "p=16,47 v=21,-51\n" +
            "p=10,32 v=99,-15\n" +
            "p=94,95 v=-30,82\n" +
            "p=25,1 v=-26,-12\n" +
            "p=62,73 v=17,-34\n" +
            "p=36,39 v=-75,53\n" +
            "p=60,54 v=46,77\n" +
            "p=63,48 v=-77,-30\n" +
            "p=64,62 v=-21,75\n" +
            "p=63,99 v=-4,-90\n" +
            "p=75,99 v=-75,25\n" +
            "p=27,62 v=9,75\n" +
            "p=44,102 v=47,75\n" +
            "p=57,21 v=40,28\n" +
            "p=87,57 v=14,83\n" +
            "p=30,77 v=9,72\n" +
            "p=60,24 v=3,56\n" +
            "p=93,71 v=25,-71\n" +
            "p=41,7 v=3,-30\n" +
            "p=26,55 v=49,-86\n" +
            "p=49,20 v=-81,29\n" +
            "p=8,59 v=-5,8\n" +
            "p=97,56 v=98,8\n" +
            "p=53,102 v=-61,12\n" +
            "p=6,96 v=-2,-48\n" +
            "p=71,11 v=14,70\n" +
            "p=25,10 v=-17,72\n" +
            "p=43,78 v=-81,-19\n" +
            "p=70,61 v=-54,-45\n" +
            "p=55,99 v=-90,-21\n" +
            "p=55,6 v=-80,53\n" +
            "p=22,36 v=84,70\n" +
            "p=84,57 v=28,86\n" +
            "p=89,2 v=68,-90\n" +
            "p=6,72 v=-91,57\n" +
            "p=86,100 v=-13,65\n" +
            "p=97,31 v=-7,-16\n" +
            "p=55,58 v=40,42\n" +
            "p=65,59 v=-21,59\n" +
            "p=33,79 v=81,32\n" +
            "p=11,84 v=-60,58\n" +
            "p=60,85 v=-27,-54\n" +
            "p=36,8 v=-49,3\n" +
            "p=94,85 v=-71,-88\n" +
            "p=27,96 v=-46,-48\n" +
            "p=67,50 v=83,-26\n" +
            "p=99,53 v=96,-16\n" +
            "p=50,7 v=-32,-39\n" +
            "p=77,42 v=-13,8\n" +
            "p=97,99 v=-7,40\n" +
            "p=81,20 v=68,20\n" +
            "p=55,23 v=83,-83\n" +
            "p=48,4 v=-84,-65\n" +
            "p=10,1 v=61,-56\n" +
            "p=40,23 v=-59,-55\n" +
            "p=38,44 v=-96,-6\n" +
            "p=97,18 v=82,54\n" +
            "p=68,72 v=43,-61\n" +
            "p=61,31 v=-61,28\n" +
            "p=83,68 v=-59,84\n" +
            "p=46,77 v=-78,-79\n" +
            "p=72,102 v=-47,-4\n" +
            "p=72,61 v=-27,51\n" +
            "p=66,102 v=19,64\n" +
            "p=90,101 v=-27,39\n" +
            "p=44,73 v=-29,76\n" +
            "p=60,82 v=89,83\n" +
            "p=39,23 v=-87,2\n" +
            "p=4,87 v=-34,67\n" +
            "p=68,93 v=-33,-63\n" +
            "p=31,56 v=-88,-67\n" +
            "p=99,12 v=-66,52\n" +
            "p=11,58 v=50,-78\n" +
            "p=98,90 v=7,41\n" +
            "p=79,90 v=93,80\n" +
            "p=62,3 v=-18,-4\n" +
            "p=67,10 v=-56,-28\n" +
            "p=14,8 v=51,-76\n" +
            "p=48,51 v=46,-9\n" +
            "p=90,75 v=-40,-78\n" +
            "p=41,33 v=-55,-24\n" +
            "p=73,48 v=-50,56\n" +
            "p=57,26 v=66,11\n" +
            "p=51,80 v=5,50\n" +
            "p=80,99 v=65,-74\n" +
            "p=48,60 v=-49,95\n" +
            "p=13,49 v=-15,16\n" +
            "p=52,75 v=-36,-44\n" +
            "p=7,73 v=-22,7\n" +
            "p=63,22 v=-70,-6\n" +
            "p=97,99 v=-91,56\n" +
            "p=22,5 v=-89,-99\n" +
            "p=83,36 v=-4,60\n" +
            "p=16,30 v=79,44\n" +
            "p=34,70 v=48,56\n" +
            "p=38,10 v=-31,-68\n" +
            "p=26,17 v=3,12\n" +
            "p=19,78 v=67,-3\n" +
            "p=99,53 v=17,8\n" +
            "p=88,66 v=91,-95\n" +
            "p=34,99 v=-72,-89\n" +
            "p=30,19 v=52,63\n" +
            "p=23,31 v=97,-51\n" +
            "p=63,36 v=-67,-93\n" +
            "p=15,70 v=50,-63\n" +
            "p=25,19 v=-16,23\n" +
            "p=44,74 v=46,-27\n" +
            "p=21,51 v=12,-68\n" +
            "p=39,41 v=56,80\n" +
            "p=98,83 v=-79,-96\n" +
            "p=75,13 v=-50,72\n" +
            "p=33,64 v=41,58\n" +
            "p=38,25 v=23,62\n" +
            "p=39,97 v=-46,22\n" +
            "p=59,33 v=-1,-23\n" +
            "p=43,96 v=11,98\n" +
            "p=2,2 v=-48,-74\n" +
            "p=72,33 v=-82,86\n" +
            "p=77,60 v=-56,-61\n" +
            "p=6,73 v=2,-62\n" +
            "p=42,88 v=48,-6\n" +
            "p=68,82 v=77,76\n" +
            "p=86,60 v=-24,85\n" +
            "p=43,2 v=67,35\n" +
            "p=79,5 v=71,99\n" +
            "p=53,7 v=89,-73\n" +
            "p=26,71 v=13,-6\n" +
            "p=1,45 v=14,67\n" +
            "p=40,71 v=-85,-91\n" +
            "p=1,85 v=65,57\n" +
            "p=26,87 v=81,23\n" +
            "p=58,58 v=11,8\n" +
            "p=73,96 v=6,84\n" +
            "p=43,86 v=92,-37\n" +
            "p=7,27 v=-91,-6\n" +
            "p=30,45 v=-66,19\n" +
            "p=81,13 v=21,-2\n" +
            "p=16,16 v=55,-59\n" +
            "p=22,59 v=38,94\n" +
            "p=60,71 v=-15,25\n" +
            "p=98,16 v=-33,72\n" +
            "p=29,68 v=52,-43\n" +
            "p=53,31 v=98,-20\n" +
            "p=34,46 v=84,79\n" +
            "p=35,8 v=58,4\n" +
            "p=95,83 v=36,-88\n" +
            "p=18,99 v=44,18\n" +
            "p=75,83 v=-73,61\n" +
            "p=97,65 v=79,-54\n" +
            "p=56,76 v=66,91\n" +
            "p=59,32 v=79,-53\n" +
            "p=0,54 v=-22,26\n" +
            "p=14,23 v=-80,2\n" +
            "p=97,33 v=7,18\n" +
            "p=6,18 v=24,47\n" +
            "p=95,40 v=-65,1\n" +
            "p=92,8 v=-65,30\n" +
            "p=93,72 v=10,-71\n" +
            "p=77,51 v=65,70\n" +
            "p=57,39 v=-6,71\n" +
            "p=88,73 v=-76,-35\n" +
            "p=26,23 v=-14,28\n" +
            "p=39,26 v=41,-23\n" +
            "p=36,10 v=49,-91\n" +
            "p=74,4 v=-34,-74\n" +
            "p=88,83 v=25,-29\n" +
            "p=89,1 v=10,-82\n" +
            "p=73,38 v=84,26\n" +
            "p=37,42 v=26,60\n" +
            "p=4,61 v=7,78\n" +
            "p=54,101 v=17,99\n" +
            "p=16,3 v=74,27\n" +
            "p=96,51 v=-48,-51\n" +
            "p=55,94 v=-26,-73\n" +
            "p=80,4 v=-29,-31\n" +
            "p=89,57 v=4,-19\n" +
            "p=46,67 v=17,-35\n" +
            "p=92,16 v=85,-6\n" +
            "p=61,36 v=11,-59\n" +
            "p=80,97 v=62,-74\n" +
            "p=5,72 v=-28,-87\n" +
            "p=57,47 v=11,9\n" +
            "p=99,73 v=-34,63\n" +
            "p=66,84 v=-24,93\n" +
            "p=90,78 v=13,57\n" +
            "p=23,12 v=-86,-82\n" +
            "p=33,91 v=32,40\n" +
            "p=83,75 v=19,-11\n" +
            "p=76,39 v=-17,64\n" +
            "p=49,18 v=69,89\n" +
            "p=90,50 v=25,4\n" +
            "p=41,17 v=-23,-74\n" +
            "p=16,16 v=-86,54\n" +
            "p=55,48 v=34,-60\n" +
            "p=37,55 v=49,67\n" +
            "p=11,33 v=70,-93\n" +
            "p=82,36 v=-21,-34\n" +
            "p=76,29 v=23,-94\n" +
            "p=90,61 v=92,89\n" +
            "p=88,0 v=2,-67\n" +
            "p=20,52 v=21,95\n" +
            "p=49,41 v=-78,51\n" +
            "p=82,72 v=-33,57\n" +
            "p=99,3 v=34,50\n" +
            "p=17,101 v=12,-20\n" +
            "p=12,72 v=85,32\n" +
            "p=91,51 v=-94,69\n" +
            "p=23,43 v=-82,-13\n" +
            "p=64,34 v=-94,1\n" +
            "p=87,11 v=-52,-97\n" +
            "p=11,2 v=2,-59\n" +
            "p=12,49 v=9,27\n" +
            "p=84,28 v=-36,-41\n" +
            "p=64,62 v=43,8\n" +
            "p=27,98 v=12,-21\n" +
            "p=37,35 v=-86,23\n" +
            "p=53,31 v=-12,-16\n" +
            "p=100,2 v=27,99\n" +
            "p=17,24 v=-36,36\n" +
            "p=94,81 v=-30,40\n" +
            "p=76,0 v=62,65\n" +
            "p=72,48 v=-24,94\n" +
            "p=19,25 v=9,34\n" +
            "p=41,74 v=-52,-10\n" +
            "p=87,71 v=-22,67\n" +
            "p=61,44 v=60,63\n" +
            "p=47,61 v=-93,-19\n" +
            "p=0,82 v=-42,-45\n" +
            "p=83,43 v=-90,28\n" +
            "p=40,26 v=89,-93";

    @Test
    void createEmptyMap() {
        Day14 day = new Day14();
        char[][] emptyMap = day.createEmptyMap(11, 7);
        assertEquals(7, emptyMap.length);
        assertEquals(11, emptyMap[0].length);
        assertEquals("...........", new String(emptyMap[0]));
    }

    @Test
    void parseInput() {
        Day14 day = new Day14();
        List<Robot> robots = day.parseInput(input);
        assertEquals(12, robots.size());
        assertEquals(0, robots.get(0).position.x);
        assertEquals(4, robots.get(0).position.y);
        assertEquals(3, robots.get(0).velocity.x);
        assertEquals(-3, robots.get(0).velocity.y);
    }

    @Test
    void walkOneRobotOnce() {
        Day14 day = new Day14();
        List<Robot> robots = day.parseInput(input);
        List<Robot> oneRobot = new ArrayList<>();
        oneRobot.add(robots.get(0));
        char[][] map = day.createEmptyMap(11, 7);
        map = day.walkRobots(oneRobot, map, 1);
        assertEquals("...1.......", new String(map[1]));
    }

    @Test
    void putAllRobotsOnMap() {
        Day14 day = new Day14();
        List<Robot> robots = day.parseInput(input);
        String expectedMap =
                "1.12.......\n" +
                "...........\n" +
                "...........\n" +
                "......11.11\n" +
                "1.1........\n" +
                ".........1.\n" +
                ".......1...";
        char[][] map = day.createEmptyMap(11, 7);
        map = day.walkRobots(robots, map, 0);
        List<String> actualMap = new ArrayList<>();
        for (char[] row : map) {
            actualMap.add(new String(row));
        }
        assertEquals(expectedMap, actualMap.stream().collect(Collectors.joining("\n")));
    }

    @Test
    void walkRobot5Times() {
        Day14 day = new Day14();
        Robot robot = new Robot();
        robot.position = new Point(2, 4);
        robot.velocity = new Point(2, -3);
        List<Robot> robots = new ArrayList<>(List.of(robot));
        String expectedMap =
                "...........\n" +
                "...........\n" +
                "...........\n" +
                ".1.........\n" +
                "...........\n" +
                "...........\n" +
                "...........";
        char[][] map = day.createEmptyMap(11, 7);
        map = day.walkRobots(robots, map, 5);
        List<String> actualMap = new ArrayList<>();
        for (char[] row : map) {
            actualMap.add(new String(row));
        }
        assertEquals(expectedMap, actualMap.stream().collect(Collectors.joining("\n")));
    }

    @Test
    void walkRobots100Times() {
        Day14 day = new Day14();
        List<Robot> robots = day.parseInput(input);
        String expectedMap =
                "......2..1.\n" +
                "...........\n" +
                "1..........\n" +
                ".11........\n" +
                ".....1.....\n" +
                "...12......\n" +
                ".1....1....";
        char[][] map = day.createEmptyMap(11, 7);
        map = day.walkRobots(robots, map, 100);
        List<String> actualMap = new ArrayList<>();
        for (char[] row : map) {
            actualMap.add(new String(row));
        }
        assertEquals(expectedMap, actualMap.stream().collect(Collectors.joining("\n")));
    }

    @Test
    void getSafetyFactor() {
        Day14 day = new Day14();
        List<Robot> robots = day.parseInput(input);
        char[][] map = day.createEmptyMap(11, 7);
        map = day.walkRobots(robots, map, 100);
        long safetyFactor = day.getSafetyFactor(map);
        assertEquals(12, safetyFactor);
    }

    @Test
    void getSafetyFactorFinal() {
        Day14 day = new Day14();
        List<Robot> robots = day.parseInput(finalInput);
        char[][] map = day.createEmptyMap(101, 103);
        map = day.walkRobots(robots, map, 100000);
        long safetyFactor = day.getSafetyFactor(map);
        assertEquals(219512160, safetyFactor);
    }
}
