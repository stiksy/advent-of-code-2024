package com.stiksy.advent.days;

import org.junit.jupiter.api.Test;

import java.util.List;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class Day8Tests {
    String finalInput =
            ".....y..........................p................r\n" +
            "........I.........................................\n" +
            "......................4.s.........................\n" +
            "..........4.......................................\n" +
            "....y.............................................\n" +
            "......................................p.........r.\n" +
            "..........0..s......N..................1.....p....\n" +
            "..y........4.......................p..............\n" +
            "...............0..................................\n" +
            "..............0....t....N....h....................\n" +
            ".............N....................................\n" +
            "......j...................s............H...l..O...\n" +
            "..........q.................H................O....\n" +
            "..f...e.qj.....y...0..............................\n" +
            "...........t..........................k..Q..r.....\n" +
            ".........6................Q..s...x......W.........\n" +
            "....2..b...e....t..4.........c.....xW.j...........\n" +
            "...e....................w................1.....O..\n" +
            "..e..j..5...........................c.............\n" +
            ".........B..2...............MK................H...\n" +
            "...2......b...g..X...q..........h...............O.\n" +
            "...q...2..........m....k...i...............QV.x...\n" +
            "...................i.........W.k.............HQ...\n" +
            "........b...X...............D..........c...N......\n" +
            "................................l..........h.....I\n" +
            ".m...........g......l.......c.............3......V\n" +
            "....X.......m........g...V.K...7......F.d.........\n" +
            ".........b.X...U..........................C.......\n" +
            ".....................l..............o.1....C......\n" +
            "............u.............K..............3...d....\n" +
            "......................i.T....f................V...\n" +
            "..............................1.k.................\n" +
            ".B.....E......9..m....K..5.M......................\n" +
            "...P...............M...95....o..i........I........\n" +
            "...............................S......3......wI...\n" +
            ".....EP...........9........5..T.R.................\n" +
            ".P..........v..9......f.............R.Co..w3......\n" +
            "..........h...SG..v.E...7..f.T....................\n" +
            "..........6..........L.................Y.......d..\n" +
            "..........B...............U........D..............\n" +
            "....B................U.....8..M....n...J..........\n" +
            ".........................L................Fw......\n" +
            "....L6E.P.................7.UG....J.....Y.D.......\n" +
            "........t........v...SJ........n..d...............\n" +
            "......................8v.....uG...................\n" +
            "..................L.....n.........................\n" +
            "...............T..............n......D............\n" +
            "..............o.........8................J.Y.R....\n" +
            "..................S...............u....F.......R..\n" +
            "........6..............u.....7.8..........Y..F....";
    String input =
            "............\n" + // [6,0], [11,0]
            "........0...\n" + // [3,1]
            ".....0......\n" + // [4,2], [10,2]
            ".......0....\n" + // [2,3]
            "....0.......\n" + // [9,4]
            "......A.....\n" + // [1,5], [6,5]
            "............\n" + // [3,6]
            "............\n" + // [0,7]
            "........A...\n" +
            ".........A..\n" +
            "............\n" +
            "............";    // [10,11]

    String expected =
            "$$....$....$\n" +
            ".$.$....0...\n" +
            "..$.$0....$.\n" +
            "..$$...0....\n" +
            "....0....$..\n" +
            ".$...$A....$\n" +
            "...$..$.....\n" +
            "$....$.$....\n" +
            "..$.....A...\n" +
            "....$....A..\n" +
            ".$........$.\n" +
            "...$......$$";

    @Test
    void getNodesList() {
        Day8 day8 = new Day8();
        Map<String, List<int[]>> result = day8.getNodesList(input);
        assertEquals(2, result.size());
        assertEquals(4, result.get("0").size());
        assertEquals(3, result.get("A").size());
        assertEquals(8, result.get("0").get(0)[0]);
        assertEquals(1, result.get("0").get(0)[1]);
    }

    @Test
    void getAntinodes() {
        Day8 day8 = new Day8();
        Map<String, List<int[]>> nodes = day8.getNodesList(input);
        char[][] grid = input.lines().map(String::toCharArray).toArray(char[][]::new);
        Map<String, Boolean> result = day8.getAntinodes(nodes, grid[0].length, grid.length);
        assertEquals(34, result.size());
    }

    @Test
    void getAntinodesFinal() {
        Day8 day8 = new Day8();
        Map<String, List<int[]>> nodes = day8.getNodesList(finalInput);
        char[][] grid = finalInput.lines().map(String::toCharArray).toArray(char[][]::new);
        Map<String, Boolean> result = day8.getAntinodes(nodes, grid[0].length, grid.length);
        assertEquals(1200, result.size());
    }
}
